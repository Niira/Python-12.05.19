# Курс основы программирования на Python
# Задание по программированию: Проходной балл
# 15.05.2019
#
# Для поступления в вуз абитуриент должен предъявить
# результаты трех экзаменов в виде ЕГЭ, каждый из них
# оценивается целым числом от 0 до 100 баллов. При этом
# абитуриенты, набравшие менее 40 баллов
# (неудовлетворительную оценку) по любому экзамену
# из конкурса выбывают. Остальные абитуриенты
# участвуют в конкурсе по сумме баллов за три экзамена.
#
# В конкурсе участвует N человек, при этом количество мест
# равно K. Определите проходной балл, то есть такое количество
# баллов, что количество участников, набравших столько или больше
# баллов не превосходит K, а при добавлении к ним абитуриентов,
# набравших наибольшее количество баллов среди непринятых абитуриентов,
# общее число принятых абитуриентов станет больше K.
#
# Формат ввода
#
# Программа получает на вход количество мест K. Далее идут строки
# с информацией об абитуриентах, каждая из которых состоит из имени
# (текстовая строка содержащая произвольное число пробелов) и трех
# чисел от 0 до 100, разделенных пробелами.
#
# Используйте для ввода файл input.txt с указанием кодировки utf8
# (для создания такого файла на своем компьютере в программе Notepad++
# следует использовать кодировку UTF-8 без BOM).
#
# Формат вывода
#
# Программа должна вывести проходной балл в конкурсе. Выведенное
# значение должно быть минимальным баллом, который набрал абитуриент,
# прошедший по конкурсу.
#
# Также возможны две ситуации, когда проходной балл не определен.
#
# Если будут зачислены все абитуриенты, не имеющие
# неудовлетворительных оценок, программа должна вывести число 0.
#
# Если количество имеющих равный максимальный балл абитуриентов
# больше чем K, программа должна вывести число 1.
#
# Используйте для вывода файл output.txt с указанием кодировки utf8.
#
# Предупреждение
#
# Пожалуйста, тестируйте файловый ввод и вывод на своем
# компьютере. В этой задаче слушатели часто получают
# ошибки вроде RE на первом тесте, протестировав у себя с
# помощью консоли и просто заменив input() на чтение из файла
# перед сдачей. К сожалению, такую замену не всегда удается
# сделать без ошибок, и решение слушателей действительно перестает
# правильно работать даже на первом тесте.

# inFile - Файл с исходными данными
# onFile - Файл с конечнымии данными
# stInfo - массив для хранения данных из файла inFile
# clmPlace - количество мест
# i - счетчик студентов (на случай если в файле
# есть лишние строки)
# arrPass - студенты набравшие минимальные баллы
inFile = open('input.txt', 'r', encoding='utf8')
onFile = open('output.txt', 'w', encoding='utf8')
stInfo = []
arrPass = []
i = 0
clmPlace = int(inFile.readline())
for student in inFile:
    stInfo.append(student.split())
    stInfo[i][-1] = int(stInfo[i][-1])
    stInfo[i][-2] = int(stInfo[i][-2])
    stInfo[i][-3] = int(stInfo[i][-3])
    if stInfo[i][-1] >= 40:
        if stInfo[i][-2] >= 40:
            if stInfo[i][-3] >= 40:
                arrPass.append((stInfo[i][-1] +
                                stInfo[i][-2] + stInfo[i][-3]))
    i += 1

arrPass.sort(reverse=True)
i = 0
j = 1
arrPassGroup = []
while i < len(arrPass):
    if i == (len(arrPass) - 1) and arrPass[i] != arrPass[i - 1]:
        j = 1
        arrPassGroup.append([arrPass[i], j])
    elif i == (len(arrPass) - 1) and arrPass[i] == arrPass[i - 1]:
        j += 1
        arrPassGroup.append([arrPass[i], j])
    elif arrPass[i] == arrPass[i + 1]:
        j += 1
    else:
        arrPassGroup.append([arrPass[i], j])
        j = 1
    i += 1

i = 0
j = 0
result = 0
while i < len(arrPassGroup):
    j = j + arrPassGroup[i][1]
    if j <= clmPlace:
        result = arrPassGroup[i][0]
    i += 1

if len(arrPass) <= clmPlace:
    result = 0
elif arrPass[0] == arrPass[clmPlace]:
    result = 1

print(result, file=onFile)
# print(len(arrPassGroup), file=onFile)
# print(j, file=onFile)
# print(arrPassGroup, file=onFile)
# print(arrPass, file=onFile)
inFile.close()
onFile.close()
